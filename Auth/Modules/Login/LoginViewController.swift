//
//  LoginViewController.swift
//  Auth
//
//  Created by Adam Cseke on 2022. 02. 23..
//  Copyright (c) 2022. levivig. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class LoginViewController: UIViewController {
    
    private var titleLabel: UILabel!
    private var descriptionLabel: UILabel!
    private var loginTextfield: UITextField!
    private var loginButton: Button!
    private var biometricButton: UIButton!
    private var forgotPasswordButton: UIButton!
    private var secondsLabel: UILabel!
    private var attributeString = NSMutableAttributedString()
    private var changePhoneNumberButton: UIButton!
    
    // MARK: - Public properties -
    
    var presenter: LoginPresenterInterface!
    
    // MARK: - Lifecycle -
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setup()
        presenter.viewDidLoad()
    }
    
    private func setup() {
        configureViewController()
        configureTitleLabel()
        configureDescriptionLabel()
        configureLoginTextfield()
        configureLoginButton()
        configureBiometricButton()
        configureForgotPasswordButton()
        self.hideKeyboardWhenTappedAround()
    }
    
    private func configureViewController() {
        view.backgroundColor = Colors.background
    }
    
    private func configureTitleLabel() {
        titleLabel = UILabel()
        titleLabel.text = "LoginViewController.Title".localized
        titleLabel.textColor = Colors.blackLabel
        titleLabel.textAlignment = .center
        titleLabel.font = .systemFont(ofSize: 24, weight: .bold)
        view.addSubview(titleLabel)
        
        titleLabel.snp.makeConstraints { make in
            make.centerY.equalToSuperview().multipliedBy(0.53)
            make.leading.equalToSuperview()
            make.centerX.equalToSuperview()
        }
    }
    
    private func configureDescriptionLabel() {
        descriptionLabel = UILabel()
        descriptionLabel.textColor = Colors.blackLabel
        descriptionLabel.numberOfLines = 5
        descriptionLabel.textAlignment = .center
        descriptionLabel.font = .systemFont(ofSize: 15, weight: .regular)
        view.addSubview(descriptionLabel)
        
        descriptionLabel.snp.makeConstraints { make in
            make.top.equalTo(titleLabel.snp.bottom).offset(10)
            make.leading.equalToSuperview().offset(32)
            make.centerX.equalToSuperview()
        }
    }
    
    private func configureLoginTextfield() {
        loginTextfield = UITextField()
        loginTextfield.textColor = .black
        loginTextfield.backgroundColor = .white
        loginTextfield.layer.cornerRadius = 11
        loginTextfield.textAlignment = .center
        loginTextfield.font = .systemFont(ofSize: 20, weight: .regular)
        loginTextfield.addTarget(self, action: #selector(textFieldEdidtingDidChange(_ :)), for: UIControl.Event.editingChanged)
        
        let attributes: [NSAttributedString.Key: Any] = [
            NSAttributedString.Key.font: UIFont.systemFont(ofSize: 16, weight: .regular),
            NSAttributedString.Key.foregroundColor: Colors.placeholder
        ]
        let attributedPlaceholder = NSMutableAttributedString(string: "LoginViewController.TextField.Placeholder".localized, attributes: attributes)
        loginTextfield.attributedPlaceholder = attributedPlaceholder
        
        view.addSubview(loginTextfield)
        
        loginTextfield.snp.makeConstraints { make in
            make.top.equalTo(descriptionLabel.snp.bottom).offset(32)
            make.centerX.equalToSuperview()
            make.leading.equalToSuperview().offset(15)
            make.height.equalTo(50)
        }
    }
    
    @objc func textFieldEdidtingDidChange(_ textField :UITextField) {
        let attributedString = NSMutableAttributedString(string: loginTextfield.text ?? "")
        loginTextfield.attributedText = attributedString
    }
    
    private func configureLoginButton() {
        loginButton = Button()
        loginButton.bind( buttonLabelText: "HomeViewController.ButtonTitle".localized,
                          font: .systemFont(ofSize: 16, weight: .bold),
                          textColor: .white)
        loginButton.addTarget(self, action: #selector(loginButtonTapped), for: .touchUpInside)
        
        view.addSubview(loginButton)
        
        loginButton.snp.makeConstraints { make in
            make.top.equalTo(loginTextfield.snp.bottom).offset(32)
            make.centerX.equalToSuperview()
            make.leading.equalToSuperview().offset(15)
            make.height.equalTo(50)
        }
    }
    
    @objc
    private func loginButtonTapped() {
        print("button tapped")
    }
    
    private func configureBiometricButton() {
        biometricButton = UIButton()
        biometricButton.backgroundColor = Colors.button
        biometricButton.layer.cornerRadius = 11
        
        let attributes: [NSAttributedString.Key: Any] = [
            NSAttributedString.Key.font: UIFont.systemFont(ofSize: 16, weight: .regular),
            NSAttributedString.Key.foregroundColor: UIColor.white
        ]
        
        let attachment = NSTextAttachment()
        attachment.image = UIImage(systemName: "touchid")?.withTintColor(.white)
        let imageString = NSMutableAttributedString(attachment: attachment)
        let textString = NSAttributedString(string: "LoginViewController.BiometricButton.TouchID".localized, attributes: attributes)
        imageString.append(textString)
        
        biometricButton.setAttributedTitle(imageString, for: .normal)
        
        biometricButton.addTarget(self, action: #selector(loginButtonTapped), for: .touchUpInside)
        
        view.addSubview(biometricButton)
        
        biometricButton.snp.makeConstraints { make in
            make.top.equalTo(loginButton.snp.bottom).offset(16)
            make.centerX.equalToSuperview()
            make.leading.equalToSuperview().offset(15)
            make.height.equalTo(50)
        }
    }
    
    private func configureForgotPasswordButton() {
        forgotPasswordButton = UIButton()
        forgotPasswordButton.backgroundColor = .clear
        
        view.addSubview(forgotPasswordButton)
        
        let attributes: [NSAttributedString.Key: Any] = [
            NSAttributedString.Key.font: UIFont.systemFont(ofSize: 16),
            NSAttributedString.Key.foregroundColor: UIColor.blue,
            NSAttributedString.Key.underlineStyle: NSUnderlineStyle.single.rawValue
        ]
        
        let attributeString = NSMutableAttributedString(
            string: "LoginViewController.ForgotPassword".localized,
            attributes: attributes
        )
        forgotPasswordButton.setAttributedTitle(attributeString, for: .normal)
        forgotPasswordButton.snp.makeConstraints { make in
            make.top.equalTo(biometricButton.snp.bottom).offset(24)
            make.leading.equalToSuperview().offset(32)
            make.centerX.equalToSuperview()
        }
    }
    
}

// MARK: - Extensions -

extension LoginViewController: LoginViewInterface {
    func pushPhoneNumber(phoneNumber: String) {
        print(phoneNumber)
        descriptionLabel.text = "designer.techcronus \n \(phoneNumber)"
    }
    
}
