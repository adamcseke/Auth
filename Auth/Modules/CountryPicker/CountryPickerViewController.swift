//
//  CountryPickerViewController.swift
//  Auth
//
//  Created by Adam Cseke on 2022. 02. 22..
//  Copyright (c) 2022. levivig. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class CountryPickerViewController: UIViewController {

    private var tableView: UITableView!
    private let countryDictionary = CountryCodes.countries.reversed().map { $0 }
    
    // MARK: - Public properties -

    var presenter: CountryPickerPresenterInterface!

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        setup()
    }

    private func setup() {
        configureViewController()
        configureTableView()
    }
    
    private func configureViewController() {
        view.backgroundColor = Colors.background
    }
    
    private func configureTableView() {
        tableView = UITableView()
        tableView.register(CountriesTableViewCell.self, forCellReuseIdentifier: CountriesTableViewCell.reuseID)
        tableView.tableFooterView = UIView()
        tableView.delegate = self
        tableView.dataSource = self
        
        tableView.rowHeight = 40
        view.addSubview(tableView)
        
        tableView.snp.makeConstraints { make in
            make.edges.equalToSuperview()
        }
    }
}

// MARK: - Extensions -

extension CountryPickerViewController: CountryPickerViewInterface {
}

extension CountryPickerViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let cell = tableView.dequeueReusableCell(withIdentifier: CountriesTableViewCell.reuseID, for: indexPath) as? CountriesTableViewCell else {
            return UITableViewCell()
        }
        
        let keys = countryDictionary[indexPath.row].key
        let values = countryDictionary[indexPath.row].value
        let flags = CountryCodes.flag(country: keys)
        let emoji = flags.decodeEmoji
        
        cell.set(countryFlag: emoji, countryText: "\(keys)", countryNumber: "+\(values)")
        return cell
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return CountryCodes.countries.count
    }
}

extension CountryPickerViewController: UITableViewDelegate {
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let selectedCountry = "+\(countryDictionary[indexPath.row].value)"
        presenter.didSelectCountry(country: selectedCountry)
        dismiss(animated: true)
    }
}
