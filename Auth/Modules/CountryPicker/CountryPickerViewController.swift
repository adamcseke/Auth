//
//  CountryPickerViewController.swift
//  Auth
//
//  Created by Adam Cseke on 2022. 02. 22..
//  Copyright (c) 2022. levivig. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class CountryPickerViewController: UIViewController {

    private var tableView: UITableView!
    private var countryDictionary = CountryCodes.countries.reversed().map { $0 }
    private var titleLabel: UILabel!
    private var flags: String?

    // MARK: - Public properties -

    var presenter: CountryPickerPresenterInterface!

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        setup()
    }

    private func setup() {
        configureViewController()
        configureTitleLabel()
        configureTableView()
    }
    
    private func configureViewController() {
        view.backgroundColor = Colors.background
    }
    
    private func configureTitleLabel() {
        titleLabel = UILabel()
        titleLabel.text = "Countries"
        titleLabel.font = UIFont(name: "Hind-Bold", size: 20)
        view.addSubview(titleLabel)
        
        titleLabel.snp.makeConstraints { make in
            make.centerX.equalToSuperview()
            make.top.equalToSuperview().offset(15)
        }
    }
    
    private func configureTableView() {
        tableView = UITableView()
        tableView.register(CountriesTableViewCell.self, forCellReuseIdentifier: CountriesTableViewCell.reuseID)
        tableView.tableFooterView = UIView()
        tableView.delegate = self
        tableView.dataSource = self
        tableView.rowHeight = 40
        
        view.addSubview(tableView)
        
        tableView.snp.makeConstraints { make in
            make.top.equalTo(titleLabel.snp.bottom)
            make.leading.equalToSuperview()
            make.centerX.equalToSuperview()
            make.bottom.equalToSuperview()
        }
    }
}

// MARK: - Extensions -

extension CountryPickerViewController: CountryPickerViewInterface {
}

extension CountryPickerViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let cell = tableView.dequeueReusableCell(withIdentifier: CountriesTableViewCell.reuseID, for: indexPath) as? CountriesTableViewCell else {
            return UITableViewCell()
        }
        
        let keys = countryDictionary[indexPath.row].key
        let values = countryDictionary[indexPath.row].value
        flags = CountryCodes.flag(country: keys)
        
        let emoji = flags?.decodeEmoji
        
        cell.set(countryFlag: emoji ?? "", countryText: "\(keys)", countryNumber: "+\(values)")
        return cell
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return countryDictionary.count
    }
}

extension CountryPickerViewController: UITableViewDelegate {
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let selectedCountry = "+\(countryDictionary[indexPath.row].value)"
        let selectedCountryFlag = countryDictionary[indexPath.row].key
        print(selectedCountryFlag)
        presenter.didSelectCountry(country: selectedCountry, flag: selectedCountryFlag)
        dismiss(animated: true)
    }
}
